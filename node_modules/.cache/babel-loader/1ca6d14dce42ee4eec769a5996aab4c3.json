{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/capstone/madsense-app/src/App.js\";\nimport \"./App.css\";\nimport MeasurementPage from \"./MeasurementPage\";\nimport ResultsPage from \"./ResultsPage\";\nimport FinalResultsPage from \"./FinalResultsPage\";\nimport Box from \"@mui/material/Box\";\nimport React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport logo from \"./sensis_logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_MEASUREMENT = \"measurement\";\nconst PAGE_RESULTS = \"results\";\nconst PAGE_FINAL_RESULTS = \"finalresults\";\nvar millisecondTimerStart;\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.millisecondTimerStart = millis();\n    this.state = {\n      currPage: \"\",\n      measurements: {\n        lens: [],\n        vols: [],\n        times: [],\n        dates: []\n      }\n    };\n  }\n\n  setCurrPage(page) {\n    this.setState({\n      currPage: page\n    });\n  }\n\n  addMeasurement(_ref) {\n    let {\n      lens,\n      vol,\n      date\n    } = _ref;\n    let measurements = this.state.measurements;\n    measurements.lens.push(lens);\n    measurements.vols.push(vol);\n    measurements.dates.push(date);\n    this.setState({\n      measurements: measurements\n    });\n    this.updateData();\n  }\n\n  async login() {\n    //TODO: sign in with google auth\n    console.log(\"logging in\");\n    this.setCurrPage(\"\");\n  }\n\n  async loadData() {//TODO: load from google drive\n  }\n\n  async updateData() {\n    //TODO: update in google drive\n    console.log(\"TODO: push to google. Current Measurements: \", this.state.measurements);\n  }\n\n  getContents() {\n    let currPage = this.state.currPage;\n\n    if (currPage === PAGE_MEASUREMENT) {\n      return /*#__PURE__*/_jsxDEV(MeasurementPage, {\n        addMeasurement: m => this.addMeasurement(m)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    } else if (currPage === PAGE_RESULTS) {\n      return /*#__PURE__*/_jsxDEV(ResultsPage, {\n        measurements: this.state.measurements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    } else if (currPage === PAGE_FINAL_RESULTS) {\n      return /*#__PURE__*/_jsxDEV(FinalResultsPage, {\n        measurements: this.state.measurements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      children: \"Select a page using the tabs above\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        sx: {\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            width: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              mx: \"25px\"\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"inherit\",\n              onClick: () => this.setCurrPage(PAGE_MEASUREMENT),\n              children: \"Take Measurement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"inherit\",\n              onClick: () => this.setCurrPage(PAGE_RESULTS),\n              children: \"Sensor Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"inherit\",\n              onClick: () => this.setCurrPage(PAGE_FINAL_RESULTS),\n              children: \"Final Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            variant: \"outlined\",\n            onClick: () => this.login(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), this.getContents()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/zachary/capstone/madsense-app/src/App.js"],"names":["MeasurementPage","ResultsPage","FinalResultsPage","Box","React","AppBar","Toolbar","Typography","Button","CssBaseline","logo","PAGE_MEASUREMENT","PAGE_RESULTS","PAGE_FINAL_RESULTS","millisecondTimerStart","App","Component","constructor","props","millis","state","currPage","measurements","lens","vols","times","dates","setCurrPage","page","setState","addMeasurement","vol","date","push","updateData","login","console","log","loadData","getContents","m","render","zIndex","theme","drawer","mx","flexGrow"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport MeasurementPage from \"./MeasurementPage\";\nimport ResultsPage from \"./ResultsPage\";\nimport FinalResultsPage from \"./FinalResultsPage\";\n\nimport Box from \"@mui/material/Box\";\nimport React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport logo from \"./sensis_logo.png\";\n\nconst PAGE_MEASUREMENT = \"measurement\";\nconst PAGE_RESULTS = \"results\";\nconst PAGE_FINAL_RESULTS = \"finalresults\";\nvar millisecondTimerStart;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currPage: \"\",\n      measurements: {\n        lens: [],\n        vols: [],\n        times: [],\n        dates: [],\n      },\n    };\n  }\n\n  millisecondTimerStart = millis()\n\n  setCurrPage(page) {\n    this.setState({ currPage: page });\n  }\n\n  addMeasurement({ lens, vol, date }) {\n    let measurements = this.state.measurements;\n    measurements.lens.push(lens);\n    measurements.vols.push(vol);\n    measurements.dates.push(date);\n    this.setState({ measurements: measurements });\n    this.updateData();\n  }\n\n  async login() {\n    //TODO: sign in with google auth\n    console.log(\"logging in\");\n    this.setCurrPage(\"\");\n  }\n\n  async loadData() {\n    //TODO: load from google drive\n  }\n\n  async updateData() {\n    //TODO: update in google drive\n    console.log(\n      \"TODO: push to google. Current Measurements: \",\n      this.state.measurements\n    );\n  }\n\n  getContents() {\n    let currPage = this.state.currPage;\n    if (currPage === PAGE_MEASUREMENT) {\n      return <MeasurementPage addMeasurement={(m) => this.addMeasurement(m)} />;\n    } else if (currPage === PAGE_RESULTS) {\n      return <ResultsPage measurements={this.state.measurements} />;\n    } else if (currPage === PAGE_FINAL_RESULTS) {\n      return <FinalResultsPage measurements={this.state.measurements} />;\n    }\n    return (\n      <Typography align=\"center\">\n        Select a page using the tabs above\n      </Typography>\n    );\n  }\n\n\n  render() {\n    return (\n      <Box>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <Toolbar>\n            <img src={logo} width={50}></img>\n            <Typography variant=\"h6\" component=\"div\" sx={{ mx: \"25px\" }}>\n              Dashboard\n            </Typography>\n            <Box sx={{ flexGrow: 1 }}>\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setCurrPage(PAGE_MEASUREMENT)}\n              >\n                Take Measurement\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setCurrPage(PAGE_RESULTS)}\n              >\n                Sensor Results\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setCurrPage(PAGE_FINAL_RESULTS)}\n              >\n                Final Results\n              </Button>\n            </Box>\n            <Button\n              color=\"inherit\"\n              variant=\"outlined\"\n              onClick={() => this.login()}\n            >\n              Login\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Toolbar />\n        {this.getContents()}\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}