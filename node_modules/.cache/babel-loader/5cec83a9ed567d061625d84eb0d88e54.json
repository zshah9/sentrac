{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/capstone/madsense-app/src/MeasurementPage.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Modal, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction takeMeasurement() {\n  let time = new Date().toLocaleDateString(\"en-US\");\n  return {\n    vals: Array.from({\n      length: 7\n    }, () => Math.random() * 10),\n    date: time\n  };\n}\n\nasync function getBluetoothDevices() {\n  let bluetoothAvailable = await navigator.bluetooth.getAvailability();\n\n  if (bluetoothAvailable) {\n    return await navigator.bluetooth.requestDevice({\n      acceptAllDevices: true\n    });\n  }\n}\n\nexport default function MeasurementPage(props) {\n  _s();\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 600,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4\n  };\n  let [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Text in a modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Put on the device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"TBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"3rd thing here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => props.addMeasurement(takeMeasurement()),\n      children: \"Take Measurement!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => getBluetoothDevices(),\n      children: \"Pair Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeasurementPage, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = MeasurementPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeasurementPage\");","map":{"version":3,"sources":["/Users/zachary/capstone/madsense-app/src/MeasurementPage.js"],"names":["Box","Button","Modal","Typography","React","takeMeasurement","time","Date","toLocaleDateString","vals","Array","from","length","Math","random","date","getBluetoothDevices","bluetoothAvailable","navigator","bluetooth","getAvailability","requestDevice","acceptAllDevices","MeasurementPage","props","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","open","setOpen","useState","mt","addMeasurement"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,UAA7B,QAA+C,eAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,eAAT,GAA2B;AACzB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,CAAX;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAX,EAA0B,MAAMC,IAAI,CAACC,MAAL,KAAgB,EAAhD,CADD;AAELC,IAAAA,IAAI,EAAET;AAFD,GAAP;AAID;;AAED,eAAeU,mBAAf,GAAqC;AACnC,MAAIC,kBAAkB,GAAG,MAAMC,SAAS,CAACC,SAAV,CAAoBC,eAApB,EAA/B;;AACA,MAAIH,kBAAJ,EAAwB;AACtB,WAAO,MAAMC,SAAS,CAACC,SAAV,CAAoBE,aAApB,CAAkC;AAAEC,MAAAA,gBAAgB,EAAE;AAApB,KAAlC,CAAb;AACD;AACF;;AAED,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,QAAMC,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE,UADE;AAEZC,IAAAA,GAAG,EAAE,KAFO;AAGZC,IAAAA,IAAI,EAAE,KAHM;AAIZC,IAAAA,SAAS,EAAE,uBAJC;AAKZC,IAAAA,KAAK,EAAE,GALK;AAMZC,IAAAA,OAAO,EAAE,kBANG;AAOZC,IAAAA,MAAM,EAAE,gBAPI;AAQZC,IAAAA,SAAS,EAAE,EARC;AASZC,IAAAA,CAAC,EAAE;AATS,GAAd;AAWA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBhC,KAAK,CAACiC,QAAN,CAAe,KAAf,CAAtB;AACA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAAzC;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEX,KAAT;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,mBAAf;AAAmC,UAAA,OAAO,EAAC,IAA3C;AAAgD,UAAA,SAAS,EAAC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,yBAAf;AAAyC,UAAA,EAAE,EAAE;AAAEa,YAAAA,EAAE,EAAE;AAAN,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMd,KAAK,CAACe,cAAN,CAAqBlC,eAAe,EAApC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAmBE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMW,mBAAmB,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GApCuBO,e;;KAAAA,e","sourcesContent":["import { Box, Button, Modal, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nfunction takeMeasurement() {\n  let time = new Date().toLocaleDateString(\"en-US\");\n  return {\n    vals: Array.from({ length: 7 }, () => Math.random() * 10),\n    date: time,\n  };\n}\n\nasync function getBluetoothDevices() {\n  let bluetoothAvailable = await navigator.bluetooth.getAvailability();\n  if (bluetoothAvailable) {\n    return await navigator.bluetooth.requestDevice({ acceptAllDevices: true });\n  }\n}\n\nexport default function MeasurementPage(props) {\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 600,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n  };\n  let [open, setOpen] = React.useState(false);\n  return (\n    <Box>\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Text in a modal\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </Typography>\n        </Box>\n      </Modal>\n      <ol>\n        <li>Put on the device</li>\n        <li>TBD</li>\n        <li>3rd thing here</li>\n      </ol>\n      <Button onClick={() => props.addMeasurement(takeMeasurement())}>\n        Take Measurement!\n      </Button>\n      <Button onClick={() => getBluetoothDevices()}>Pair Device</Button>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}