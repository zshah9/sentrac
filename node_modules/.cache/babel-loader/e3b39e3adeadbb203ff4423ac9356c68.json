{"ast":null,"code":"import _defineProperty from \"/Users/zachary/capstone-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/zachary/capstone-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachary/capstone-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachary/capstone-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachary/capstone-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachary/capstone-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zachary/capstone-deploy/src/ResultsPage.js\";\nimport Box from \"@mui/system/Box\";\nimport SensorTimeGraph from \"./SensorTimeGraph\";\nimport { List, ListItem, ListItemText, Drawer, Divider, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nfunction splitMeasurements(measurements) {\n  var res = [];\n\n  if (measurements.lens.length <= 0) {\n    return res;\n  }\n\n  var numSensors = measurements.lens[0].length;\n\n  var _loop = function _loop(i) {\n    res.push(measurements.lens.map(function (e, j) {\n      return {\n        val: e[i],\n        date: measurements.dates[j]\n      };\n    }));\n  };\n\n  for (var i = 0; i < numSensors; i++) {\n    _loop(i);\n  }\n\n  console.log(res);\n  return res;\n}\n\nfunction scrollIntoViewWithOffset(selector) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  window.scrollTo({\n    behavior: \"smooth\",\n    top: document.querySelector(selector).getBoundingClientRect().top - document.body.getBoundingClientRect().top - offset\n  });\n}\n\nvar ResultsPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResultsPage, _React$Component);\n\n  function ResultsPage(props) {\n    var _this;\n\n    _classCallCheck(this, ResultsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResultsPage).call(this, props));\n    _this.graphRefs = [];\n    _this.state = {\n      graphRefs: []\n    };\n    return _this;\n  }\n\n  _createClass(ResultsPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!(this.props.measurements.lens.length > 0)) {\n        return /*#__PURE__*/React.createElement(Typography, {\n          align: \"center\",\n          py: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, \"No sensor data to display. Take a measurement first.\");\n      }\n\n      var sensorMeasurements = splitMeasurements(this.props.measurements);\n      return /*#__PURE__*/React.createElement(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Drawer, {\n        variant: \"permanent\",\n        sx: _defineProperty({\n          width: 150,\n          flexShrink: 0\n        }, \"& .MuiDrawer-paper\", {\n          width: 150,\n          boxSizing: \"border-box\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: 105\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        sx: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, sensorMeasurements.map(function (_, index) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          button: true,\n          key: index,\n          onClick: function onClick() {\n            return scrollIntoViewWithOffset(\"#graph-\".concat(index));\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ListItemText, {\n          primary: \"Sensor \".concat(index + 1),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }\n        }));\n      })))), /*#__PURE__*/React.createElement(Box, {\n        component: \"main\",\n        sx: {\n          flexGrow: 1,\n          p: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, sensorMeasurements.map(function (e, i) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"graph-\".concat(i),\n          key: i,\n          ref: function ref(el) {\n            return _this2.graphRefs[i] = el;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(SensorTimeGraph, {\n          data: e,\n          title: \"Sensor \".concat(i + 1),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Divider, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return ResultsPage;\n}(React.Component);\n\nexport { ResultsPage as default };","map":{"version":3,"sources":["/Users/zachary/capstone-deploy/src/ResultsPage.js"],"names":["Box","SensorTimeGraph","List","ListItem","ListItemText","Drawer","Divider","Typography","React","splitMeasurements","measurements","res","lens","length","numSensors","i","push","map","e","j","val","date","dates","console","log","scrollIntoViewWithOffset","selector","offset","window","scrollTo","behavior","top","document","querySelector","getBoundingClientRect","body","ResultsPage","props","graphRefs","state","sensorMeasurements","display","width","flexShrink","boxSizing","marginBottom","overflow","_","index","flexGrow","p","el","Component"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,UANF,QAOO,eAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,CAA2BC,YAA3B,EAAyC;AACvC,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAID,YAAY,CAACE,IAAb,CAAkBC,MAAlB,IAA4B,CAAhC,EAAmC;AACjC,WAAOF,GAAP;AACD;;AACD,MAAIG,UAAU,GAAGJ,YAAY,CAACE,IAAb,CAAkB,CAAlB,EAAqBC,MAAtC;;AALuC,6BAM9BE,CAN8B;AAOrCJ,IAAAA,GAAG,CAACK,IAAJ,CACEN,YAAY,CAACE,IAAb,CAAkBK,GAAlB,CAAsB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9B,aAAO;AAAEC,QAAAA,GAAG,EAAEF,CAAC,CAACH,CAAD,CAAR;AAAaM,QAAAA,IAAI,EAAEX,YAAY,CAACY,KAAb,CAAmBH,CAAnB;AAAnB,OAAP;AACD,KAFD,CADF;AAPqC;;AAMvC,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAApB,EAAgCC,CAAC,EAAjC,EAAqC;AAAA,UAA5BA,CAA4B;AAMpC;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACA,SAAOA,GAAP;AACD;;AAED,SAASc,wBAAT,CAAkCC,QAAlC,EAAwD;AAAA,MAAZC,MAAY,uEAAH,CAAG;AACtDC,EAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,IAAAA,QAAQ,EAAE,QADI;AAEdC,IAAAA,GAAG,EACDC,QAAQ,CAACC,aAAT,CAAuBP,QAAvB,EAAiCQ,qBAAjC,GAAyDH,GAAzD,GACAC,QAAQ,CAACG,IAAT,CAAcD,qBAAd,GAAsCH,GADtC,GAEAJ;AALY,GAAhB;AAOD;;IAEoBS,W;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAKC,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE;AADA,KAAb;AAHiB;AAMlB;;;;6BAEQ;AAAA;;AACP,UAAI,EAAE,KAAKD,KAAL,CAAW3B,YAAX,CAAwBE,IAAxB,CAA6BC,MAA7B,GAAsC,CAAxC,CAAJ,EAAgD;AAC9C,4BACE,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAC,QAAlB;AAA2B,UAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF;AAKD;;AACD,UAAM2B,kBAAkB,GAAG/B,iBAAiB,CAAC,KAAK4B,KAAL,CAAW3B,YAAZ,CAA5C;AACA,0BACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAE+B,UAAAA,OAAO,EAAE;AAAX,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,EAAE;AACAC,UAAAA,KAAK,EAAE,GADP;AAEAC,UAAAA,UAAU,EAAE;AAFZ,iCAGwB;AAAED,UAAAA,KAAK,EAAE,GAAT;AAAcE,UAAAA,SAAS,EAAE;AAAzB,SAHxB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,eAaE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,kBAAkB,CAACvB,GAAnB,CAAuB,UAAC8B,CAAD,EAAIC,KAAJ;AAAA,4BACtB,oBAAC,QAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,GAAG,EAAEA,KAFP;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMvB,wBAAwB,kBAAWuB,KAAX,EAA9B;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKE,oBAAC,YAAD;AAAc,UAAA,OAAO,mBAAYA,KAAK,GAAG,CAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADsB;AAAA,OAAvB,CADH,CADF,CAbF,CADF,eA4BE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,CAAZ;AAAeC,UAAAA,CAAC,EAAE;AAAlB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,kBAAkB,CAACvB,GAAnB,CAAuB,UAACC,CAAD,EAAIH,CAAJ;AAAA,4BACtB;AACE,UAAA,EAAE,kBAAWA,CAAX,CADJ;AAEE,UAAA,GAAG,EAAEA,CAFP;AAGE,UAAA,GAAG,EAAE,aAACoC,EAAD;AAAA,mBAAS,MAAI,CAACb,SAAL,CAAevB,CAAf,IAAoBoC,EAA7B;AAAA,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAEjC,CAAvB;AAA0B,UAAA,KAAK,mBAAYH,CAAC,GAAG,CAAhB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,eAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADsB;AAAA,OAAvB,CADH,CA5BF,CADF;AA2CD;;;;EA7DsCP,KAAK,CAAC4C,S;;SAA1BhB,W","sourcesContent":["import Box from \"@mui/system/Box\";\nimport SensorTimeGraph from \"./SensorTimeGraph\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Drawer,\n  Divider,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nfunction splitMeasurements(measurements) {\n  let res = [];\n  if (measurements.lens.length <= 0) {\n    return res;\n  }\n  let numSensors = measurements.lens[0].length;\n  for (let i = 0; i < numSensors; i++) {\n    res.push(\n      measurements.lens.map((e, j) => {\n        return { val: e[i], date: measurements.dates[j] };\n      })\n    );\n  }\n  console.log(res);\n  return res;\n}\n\nfunction scrollIntoViewWithOffset(selector, offset = 0) {\n  window.scrollTo({\n    behavior: \"smooth\",\n    top:\n      document.querySelector(selector).getBoundingClientRect().top -\n      document.body.getBoundingClientRect().top -\n      offset,\n  });\n}\n\nexport default class ResultsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphRefs = [];\n    this.state = {\n      graphRefs: [],\n    };\n  }\n\n  render() {\n    if (!(this.props.measurements.lens.length > 0)) {\n      return (\n        <Typography align=\"center\" py={5}>\n          No sensor data to display. Take a measurement first.\n        </Typography>\n      );\n    }\n    const sensorMeasurements = splitMeasurements(this.props.measurements);\n    return (\n      <Box sx={{ display: \"flex\" }}>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            width: 150,\n            flexShrink: 0,\n            [`& .MuiDrawer-paper`]: { width: 150, boxSizing: \"border-box\" },\n          }}\n        >\n          {\n            // this pushes content below the appbar\n          }\n          <div style={{ marginBottom: 105 }}></div>\n\n          <Box sx={{ overflow: \"auto\" }}>\n            <List>\n              {sensorMeasurements.map((_, index) => (\n                <ListItem\n                  button\n                  key={index}\n                  onClick={() => scrollIntoViewWithOffset(`#graph-${index}`)}\n                >\n                  <ListItemText primary={`Sensor ${index + 1}`} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </Drawer>\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n          {sensorMeasurements.map((e, i) => (\n            <div\n              id={`graph-${i}`}\n              key={i}\n              ref={(el) => (this.graphRefs[i] = el)}\n            >\n              <SensorTimeGraph data={e} title={`Sensor ${i + 1}`} />\n              <Divider />\n            </div>\n          ))}\n        </Box>\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}