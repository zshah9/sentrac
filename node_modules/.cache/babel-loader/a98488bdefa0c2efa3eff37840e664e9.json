{"ast":null,"code":"import _classCallCheck from \"/Users/zachary/capstone/madsense-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachary/capstone/madsense-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachary/capstone/madsense-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachary/capstone/madsense-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachary/capstone/madsense-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zachary/capstone/madsense-app/src/FinalResultsPage.js\";\nimport Box from \"@mui/system/Box\";\nimport { Stack } from \"@mui/material\";\nimport { ShapeGraph, VolumeTimeGraph } from \"./VolumeTimeGraph\";\nimport { Toolbar, List, ListItem, ListItemText, Drawer, Divider, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nfunction splitMeasurements(measurements) {\n  var res = [];\n\n  if (measurements.vols.length <= 0) {\n    return res;\n  }\n\n  res.push(measurements.vols.map(function (e, j) {\n    return {\n      val: measurements.vols[j],\n      date: measurements.dates[j]\n    };\n  }));\n  console.log(\"to plot: \", res);\n  return res;\n}\n\nfunction scrollIntoViewWithOffset(selector) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n  window.scrollTo({\n    behavior: \"smooth\",\n    top: document.querySelector(selector).getBoundingClientRect().top - document.body.getBoundingClientRect().top - offset\n  });\n}\n\nvar FinalResultsPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(FinalResultsPage, _React$Component);\n\n  function FinalResultsPage(props) {\n    var _this;\n\n    _classCallCheck(this, FinalResultsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalResultsPage).call(this, props));\n    _this.graphRefs = [];\n    _this.state = {\n      graphRefs: []\n    };\n    return _this;\n  }\n\n  _createClass(FinalResultsPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!(this.props.measurements.vols.length > 0)) {\n        return /*#__PURE__*/React.createElement(Typography, {\n          align: \"center\",\n          py: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }\n        }, \"No volume data to display. Take a measurement first.\");\n      }\n\n      var calculatedVols = splitMeasurements(this.props.measurements);\n      return /*#__PURE__*/React.createElement(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Stack, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        component: \"main\",\n        sx: {\n          flexGrow: 1,\n          p: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, calculatedVols.map(function (e, i) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"graph-\".concat(i),\n          key: i,\n          ref: function ref(el) {\n            return _this2.graphRefs[i] = el;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(VolumeTimeGraph, {\n          data: e,\n          title: \"Joint Volume Progression\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        sx: {\n          flexGrow: 1,\n          p: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, calculatedVols.map(function (e, i) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"graph-\".concat(i),\n          key: i,\n          ref: function ref(el) {\n            return _this2.graphRefs[i] = el;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ShapeGraph, {\n          data: _this2.props.measurements.lens,\n          title: \"Current Joint Shape\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return FinalResultsPage;\n}(React.Component);\n\nexport { FinalResultsPage as default };","map":{"version":3,"sources":["/Users/zachary/capstone/madsense-app/src/FinalResultsPage.js"],"names":["Box","Stack","ShapeGraph","VolumeTimeGraph","Toolbar","List","ListItem","ListItemText","Drawer","Divider","Typography","React","splitMeasurements","measurements","res","vols","length","push","map","e","j","val","date","dates","console","log","scrollIntoViewWithOffset","selector","offset","window","scrollTo","behavior","top","document","querySelector","getBoundingClientRect","body","FinalResultsPage","props","graphRefs","state","calculatedVols","display","flexGrow","p","i","el","lens","Component"],"mappings":"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","sourcesContent":["import Box from \"@mui/system/Box\";\nimport { Stack } from \"@mui/material\";\nimport { ShapeGraph, VolumeTimeGraph } from \"./VolumeTimeGraph\";\nimport {\n  Toolbar,\n  List,\n  ListItem,\n  ListItemText,\n  Drawer,\n  Divider,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nfunction splitMeasurements(measurements) {\n  let res = [];\n  if (measurements.vols.length <= 0) {\n    return res;\n  }\n  res.push(\n    measurements.vols.map((e, j) => {\n      return { val: measurements.vols[j], date: measurements.dates[j] };\n    })\n  );\n  console.log(\"to plot: \", res);\n  return res;\n}\n\nfunction scrollIntoViewWithOffset(selector, offset = 64) {\n  window.scrollTo({\n    behavior: \"smooth\",\n    top:\n      document.querySelector(selector).getBoundingClientRect().top -\n      document.body.getBoundingClientRect().top -\n      offset,\n  });\n}\n\nexport default class FinalResultsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphRefs = [];\n    this.state = {\n      graphRefs: [],\n    };\n  }\n\n  render() {\n    if (!(this.props.measurements.vols.length > 0)) {\n      return (\n        <Typography align=\"center\" py={5}>\n          No volume data to display. Take a measurement first.\n        </Typography>\n      );\n    }\n    const calculatedVols = splitMeasurements(this.props.measurements);\n    return (\n      <Box sx={{ display: \"flex\" }}>\n        <Stack>\n          <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n            {calculatedVols.map((e, i) => (\n              <div\n                id={`graph-${i}`}\n                key={i}\n                ref={(el) => (this.graphRefs[i] = el)}\n              >\n                <VolumeTimeGraph data={e} title={\"Joint Volume Progression\"} />\n              </div>\n            ))}\n          </Box>\n          <Divider />\n          <Box sx={{ flexGrow: 1, p: 3 }}>\n            {calculatedVols.map((e, i) => (\n              <div\n                id={`graph-${i}`}\n                key={i}\n                ref={(el) => (this.graphRefs[i] = el)}\n              >\n                <ShapeGraph\n                  data={this.props.measurements.lens}\n                  title={\"Current Joint Shape\"}\n                />\n              </div>\n            ))}\n          </Box>\n        </Stack>\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}