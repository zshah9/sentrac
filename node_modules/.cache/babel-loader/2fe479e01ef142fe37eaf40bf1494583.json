{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/capstone-deploy/src/VolumeTimeGraph.js\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label } from \"recharts\";\n\nfunction getMin(data) {\n  var local_min = Infinity;\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].val < local_min) {\n      local_min = data[i].val;\n    }\n  }\n\n  return Math.round(local_min * 0.95 / 100) * 100;\n}\n\nfunction getMax(data) {\n  var local_max = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].val > local_max) {\n      local_max = data[i].val;\n    }\n  }\n\n  return Math.round(local_max * 1.05 / 100) * 100;\n}\n\nexport function VolumeTimeGraph(props) {\n  var minRange = getMin(props.data);\n  var maxRange = getMax(props.data);\n  console.log(\"data: \", props.data);\n  var graphWidth = Math.max(900, props.data.length * 75);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      py: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: 900,\n      marginLeft: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(LineChart, {\n    width: graphWidth,\n    height: 500,\n    data: props.data,\n    margin: {\n      top: 10,\n      right: 20,\n      left: 100,\n      bottom: 105\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"1 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    angle: -60,\n    dx: -25,\n    dy: 40,\n    interval: 0,\n    fontSize: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    position: \"bottom\",\n    style: {\n      textAnchor: \"middle\"\n    },\n    dy: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Date\")), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"number\",\n    domain: [minRange, maxRange],\n    tickMargin: 10,\n    tickCount: 3,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    angle: 270,\n    position: \"left\",\n    style: {\n      textAnchor: \"middle\"\n    },\n    dx: -40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Volume (mL)\")), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"val\",\n    legendType: \"none\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    strokeWidth: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}\nexport function ShapeGraph(props) {\n  var recentSensorLengths = [];\n\n  if (props.data.length > 0) {\n    recentSensorLengths = props.data[props.data.length - 1];\n  } else {\n    return;\n  }\n\n  var minRange = getMin(props.data[props.data.length - 1]);\n  var maxRange = getMax(props.data[props.data.length - 1]);\n  var data = recentSensorLengths.map(function (e, j) {\n    return {\n      val: e,\n      sensor: j + 1\n    };\n  });\n  console.log(data);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      py: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: 500,\n      marginLeft: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(LineChart, {\n    width: 900,\n    height: 450,\n    data: data,\n    margin: {\n      top: 20,\n      right: 20,\n      left: 20,\n      bottom: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"1 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"sensor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    position: \"bottom\",\n    style: {\n      textAnchor: \"middle\"\n    },\n    dy: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Sensor\")), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"number\" //domain={[minRange, maxRange]}\n    ,\n    tickMargin: 10,\n    tickCount: 3,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    angle: 270,\n    position: \"left\",\n    style: {\n      textAnchor: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Length (cm)\")), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"val\",\n    legendType: \"none\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    strokeWidth: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/zachary/capstone-deploy/src/VolumeTimeGraph.js"],"names":["Typography","Box","React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Label","getMin","data","local_min","Infinity","i","length","val","Math","round","getMax","local_max","VolumeTimeGraph","props","minRange","maxRange","console","log","graphWidth","max","py","width","marginLeft","title","top","right","left","bottom","textAnchor","r","ShapeGraph","recentSensorLengths","map","e","j","sensor"],"mappings":"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","sourcesContent":["import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Label,\n} from \"recharts\";\n\nfunction getMin(data) {\n  let local_min = Infinity;\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].val < local_min) {\n      local_min = data[i].val;\n    }\n  }\n  return Math.round((local_min * 0.95) / 100) * 100;\n}\n\nfunction getMax(data) {\n  let local_max = 0;\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].val > local_max) {\n      local_max = data[i].val;\n    }\n  }\n  return Math.round((local_max * 1.05) / 100) * 100;\n}\n\nexport function VolumeTimeGraph(props) {\n  let minRange = getMin(props.data);\n  let maxRange = getMax(props.data);\n  console.log(\"data: \", props.data);\n  let graphWidth = Math.max(900, props.data.length * 75);\n\n  return (\n    <Box sx={{ py: 5 }}>\n      <Box sx={{ width: 900, marginLeft: \"100px\" }}>\n        <Typography variant=\"h5\" align=\"center\">\n          {props.title}\n        </Typography>\n      </Box>\n      <LineChart\n        width={graphWidth}\n        height={500}\n        data={props.data}\n        margin={{\n          top: 10,\n          right: 20,\n          left: 100,\n          bottom: 105,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"1 1\" />\n        <XAxis\n          dataKey=\"date\"\n          angle={-60}\n          dx={-25}\n          dy={40}\n          interval={0}\n          fontSize={17}\n        >\n          <Label position=\"bottom\" style={{ textAnchor: \"middle\" }} dy={80}>\n            Date\n          </Label>\n        </XAxis>\n        <YAxis\n          type=\"number\"\n          domain={[minRange, maxRange]}\n          tickMargin={10}\n          tickCount={3}\n          width={100}\n        >\n          <Label\n            angle={270}\n            position=\"left\"\n            style={{ textAnchor: \"middle\" }}\n            dx={-40}\n          >\n            Volume (mL)\n          </Label>\n        </YAxis>\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"val\"\n          legendType=\"none\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n          strokeWidth={5}\n        />\n      </LineChart>\n    </Box>\n  );\n}\n\nexport function ShapeGraph(props) {\n  let recentSensorLengths = [];\n  if (props.data.length > 0) {\n    recentSensorLengths = props.data[props.data.length - 1];\n  } else {\n    return;\n  }\n  let minRange = getMin(props.data[props.data.length - 1]);\n  let maxRange = getMax(props.data[props.data.length - 1]);\n  let data = recentSensorLengths.map((e, j) => {\n    return { val: e, sensor: j + 1 };\n  });\n  console.log(data);\n  return (\n    <Box sx={{ py: 5 }}>\n      <Box sx={{ width: 500, marginLeft: 30 }}>\n        <Typography variant=\"h5\" align=\"center\">\n          {props.title}\n        </Typography>\n      </Box>\n      <LineChart\n        width={900}\n        height={450}\n        data={data}\n        margin={{\n          top: 20,\n          right: 20,\n          left: 20,\n          bottom: 80,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"1 1\" />\n        <XAxis dataKey=\"sensor\">\n          <Label position=\"bottom\" style={{ textAnchor: \"middle\" }} dy={10}>\n            Sensor\n          </Label>\n        </XAxis>\n        <YAxis\n          type=\"number\"\n          //domain={[minRange, maxRange]}\n          tickMargin={10}\n          tickCount={3}\n          width={100}\n        >\n          <Label angle={270} position=\"left\" style={{ textAnchor: \"middle\" }}>\n            Length (cm)\n          </Label>\n        </YAxis>\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"val\"\n          legendType=\"none\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n          strokeWidth={5}\n        />\n      </LineChart>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}