{"version":3,"sources":["SentracWhiteLogo3.png","btUtils.js","MeasurementPage.js","SensorTimeGraph.js","ResultsPage.js","VolumeTimeGraph.js","FinalResultsPage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","callCallback","promise","callback","then","result","undefined","catch","error","parseData","data","t","encoding","toLowerCase","getUint8","getUint16","getUint32","getInt8","getInt16","getInt32","getFloat32","getFloat64","TextDecoder","decode","blueToothCharacteristic","blueTooth","p5ble","Object","classCallCheck","this","device","server","service","characteristics","handleNotifications","createClass","key","value","serviceUuid","_this","console","log","navigator","bluetooth","requestDevice","filters","services","concat","name","gatt","connect","getPrimaryService","getCharacteristics","_read","asyncToGenerator","regenerator_default","a","mark","_callee","characteristic","dataTypeOrcallback","cb","dataType","wrap","_context","prev","next","uuid","find","char","abrupt","readValue","stop","_x","_x2","_x3","apply","arguments","inputValue","bufferToSend","TextEncoder","encode","Uint8Array","of","writeValue","_startNotifications","_callee2","_context2","startNotifications","event","parsedData","target","addEventListener","_x4","_x5","_x6","_stopNotifications","_callee3","_context3","stopNotifications","removeEventListener","t0","_x7","connected","disconnect","handleDisconnected","isConnected","firstRead","normalizer","MeasurementPage","props","startTime","receivedValues","lenSlopes","lenIntercepts","driftCorrection","senWidth","sleeveLen","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","_React$useState3","_React$useState4","message","setMessage","_React$useState5","_React$useState6","severity","setSeverity","showSnackbar","msg","sev","length","handleClose","reason","takeMeasurement","command","window","enc","sendData","gotValue","Number","time","Date","toLocaleDateString","sensorReadings","lengths","vol","noWorkingSensors","slice","i","lowerWorkingNeighbor","upperWorkingNeighbor","secondLowerWorkingNeighbor","secondUpperWorkingNeighbor","Math","random","pow","PI","addMeasurement","lens","Array","from","rawVals","date","now","processHackAndUpdate","gotCharacteristics","onDisconnected","react_default","createElement","Box","px","py","Typography","variant","Stack","spacing","Button","onClick","Snackbar","autoHideDuration","onClose","Alert","sx","width","SensorTimeGraph","graphWidth","max","Box_Box","marginLeft","align","title","LineChart","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","dy","dx","interval","angle","fontSize","Label","position","style","textAnchor","YAxis","Tooltip","Legend","Line","type","legendType","stroke","activeDot","r","strokeWidth","ResultsPage","possibleConstructorReturn","getPrototypeOf","call","graphRefs","state","_this2","measurements","sensorMeasurements","res","numSensors","_loop","push","map","e","j","val","dates","splitMeasurements","display","Drawer","defineProperty","flexShrink","boxSizing","marginBottom","overflow","List","_","index","ListItem","button","selector","offset","scrollTo","behavior","document","querySelector","getBoundingClientRect","body","scrollIntoViewWithOffset","ListItemText","primary","component","flexGrow","id","ref","el","Divider","Component","VolumeTimeGraph","minRange","local_min","Infinity","round","getMin","maxRange","local_max","getMax","domain","tickMargin","tickCount","ShapeGraph","sensor","FinalResultsPage","vols","calculatedVols","App","pseudo_len","x","currPage","page","setState","_ref","updateData","setCurrPage","m","ResultsPage_ResultsPage","FinalResultsPage_FinalResultsPage","_this3","CssBaseline","AppBar","zIndex","theme","drawer","Toolbar","src","logo","alt","mx","color","border","borderRadius","getContents","createTheme","palette","main","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","App_App","getElementById"],"mappings":"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","file":"static/js/main.bfcf6879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SentracWhiteLogo3.85d9de4e.png\";","// bluetooth code from p5ble\n\nexport class p5ble {\n  constructor() {\n    this.device = null;\n    this.server = null;\n    this.service = null;\n    this.characteristics = [];\n    this.handleNotifications = null;\n  }\n\n  connect(serviceUuid, callback) {\n    console.log(\"Requesting Bluetooth Device...\");\n\n    return callCallback(\n      navigator.bluetooth\n        .requestDevice({ filters: [{ services: [serviceUuid] }] })\n        .then((device) => {\n          this.device = device;\n          console.log(`Got device ${device.name}`);\n          return device.gatt.connect();\n        })\n        .then((server) => {\n          this.server = server;\n          console.log(\"Getting Service...\");\n          return server.getPrimaryService(serviceUuid);\n        })\n        .then((service) => {\n          this.service = service;\n          console.log(\"Getting Characteristics...\");\n          return service.getCharacteristics();\n        })\n        .then((characteristics) => {\n          this.characteristics = characteristics;\n          console.log(\"Got Characteristic\");\n          return characteristics;\n        })\n        .catch((error) => {\n          console.error(`Error: ${error}`);\n        }),\n      callback\n    );\n  }\n\n  async read(characteristic, dataTypeOrcallback, cb) {\n    let callback;\n    let dataType;\n    if (typeof dataTypeOrcallback === \"function\") {\n      callback = dataTypeOrcallback;\n    } else if (typeof dataTypeOrcallback === \"string\") {\n      dataType = dataTypeOrcallback;\n    }\n    if (typeof cb === \"function\") {\n      callback = cb;\n    }\n\n    if (!characteristic || !characteristic.uuid)\n      console.error(\"The characteristic does not exist.\");\n    const validChar = this.characteristics.find(\n      (char) => char.uuid === characteristic.uuid\n    );\n    if (!validChar) return console.error(\"The characteristic does not exist.\");\n\n    return callCallback(\n      characteristic.readValue().then((value) => parseData(value, dataType)),\n      callback\n    );\n  }\n\n  write(characteristic, inputValue) {\n    if (!characteristic || !characteristic.uuid)\n      console.error(\"The characteristic does not exist.\");\n    const validChar = this.characteristics.find(\n      (char) => char.uuid === characteristic.uuid\n    );\n    if (!validChar) return console.error(\"The characteristic does not exist.\");\n\n    let bufferToSend;\n    if (typeof inputValue === \"string\") {\n      const encoder = new TextEncoder(\"utf-8\");\n      bufferToSend = encoder.encode(inputValue);\n    } else bufferToSend = Uint8Array.of(inputValue);\n    console.log(`Writing ${inputValue} to Characteristic...`);\n    return characteristic.writeValue(bufferToSend);\n  }\n\n  async startNotifications(characteristic, handleNotifications, dataType) {\n    if (!characteristic || !characteristic.uuid)\n      console.error(\"The characteristic does not exist.\");\n    const validChar = this.characteristics.find(\n      (char) => char.uuid === characteristic.uuid\n    );\n    if (!validChar) return console.error(\"The characteristic does not exist.\");\n\n    await characteristic.startNotifications();\n\n    console.log(\"> Notifications started\");\n\n    this.handleNotifications = (event) => {\n      const { value } = event.target;\n      const parsedData = parseData(value, dataType);\n      handleNotifications(parsedData);\n    };\n\n    return characteristic.addEventListener(\n      \"characteristicvaluechanged\",\n      this.handleNotifications\n    );\n  }\n\n  async stopNotifications(characteristic) {\n    if (!characteristic || !characteristic.uuid)\n      console.error(\"The characteristic does not exist.\");\n    const validChar = this.characteristics.find(\n      (char) => char.uuid === characteristic.uuid\n    );\n    if (!validChar) return console.error(\"The characteristic does not exist.\");\n\n    try {\n      await characteristic.stopNotifications();\n\n      if (this.handleNotifications) {\n        console.log(\"> Notifications stopped\");\n        return characteristic.removeEventListener(\n          \"characteristicvaluechanged\",\n          this.handleNotifications\n        );\n      }\n      return console.log(\"> Notifications stopped\");\n    } catch (error) {\n      return console.error(`Error: ${error}`);\n    }\n  }\n\n  disconnect() {\n    if (!this.device) return;\n    console.log(\"Disconnecting from Bluetooth Device...\");\n    if (this.device.gatt.connected) {\n      this.device.gatt.disconnect();\n    } else {\n      console.log(\"> Bluetooth Device is already disconnected\");\n    }\n  }\n\n  onDisconnected(handleDisconnected) {\n    if (!this.device) return console.error(\"There is no device connected.\");\n    return this.device.addEventListener(\n      \"gattserverdisconnected\",\n      handleDisconnected\n    );\n  }\n\n  isConnected() {\n    if (!this.device) return false;\n    if (this.device.gatt.connected) {\n      return true;\n    }\n    return false;\n  }\n}\n\nfunction callCallback(promise, callback) {\n  if (callback) {\n    promise\n      .then((result) => {\n        callback(undefined, result);\n        return result;\n      })\n      .catch((error) => {\n        callback(error);\n        return error;\n      });\n  }\n  return promise;\n}\n\nfunction parseData(data, t, encoding) {\n  const type = t ? t.toLowerCase() : \"unit8\";\n  let result;\n  let decoder;\n  switch (type) {\n    case \"unit8\":\n      result = data.getUint8(0);\n      break;\n\n    case \"uint16\":\n      result = data.getUint16(0);\n      break;\n\n    case \"uint32\":\n      result = data.getUint32(0);\n      break;\n\n    case \"int8\":\n      result = data.getInt8(0);\n      break;\n\n    case \"int16\":\n      result = data.getInt16(0);\n      break;\n\n    case \"int32\":\n      result = data.getInt32(0);\n      break;\n\n    case \"float32\":\n      result = data.getFloat32(0, true); // littleEndian\n      break;\n\n    case \"float32-bigEndian\":\n      result = data.getFloat32(0); // BigEndian\n      break;\n\n    case \"float64\":\n      result = data.getFloat64(0, true); // littleEndian\n      break;\n\n    case \"float64-bigEndian\":\n      result = data.getFloat64(0); // BigEndian\n      break;\n\n    case \"string\":\n      // TODO: have the ability to choose different string encoding: like utf16\n      decoder = new TextDecoder(encoding || \"utf8\");\n      result = decoder.decode(data);\n      break;\n\n    case \"custom\":\n      // let the user do the parsing\n      result = data;\n      break;\n\n    default:\n      result = data.getUint8(0);\n      break;\n  }\n  return result;\n}\n","import { Box, Button, Stack, Snackbar, Alert, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { p5ble } from \"./btUtils\";\n\n// these are global constants right here, but might need to be moved to state variables\nlet blueTooth = new p5ble();\nlet blueToothCharacteristic; //this is a blu\nlet isConnected = false;\nlet firstRead = true;\nlet normalizer = 1;\n\nexport default function MeasurementPage(props) {\n  const receivedValues = [\n    \"s1: 0.0\",\n    \"s2: 0.0\",\n    \"s3: 0.0\",\n    \"s4: 0.0\",\n    \"s5: 0.0\",\n    \"s6: 0.0\",\n    \"s7: 0.0\",\n    \"s8: 0.0\",\n  ];\n\n  // preset parameters for converting voltage to length and volume\n  const lenSlopes = [\n    0.038364286,\n    0.025627703,\n    0.019189762,\n    0.019665048,\n    0.020077975,\n    0.019665048,\n    0.020077975,\n  ];\n  const lenIntercepts = [\n    -80.51120509,\n    -47.37641793,\n    -30.61590649,\n    -31.82615128,\n    -32.85358599,\n    -31.82615128,\n    -32.85358599,\n  ];\n  // const lenSlopes = [\n  //   0.038364286,\n  //   0.025627703,\n  //   0.019189762,\n  //   0.019665048,\n  //   0.020077975,\n  //   0.0094725,\n  //   0.006184976,\n  // ];\n  // const lenIntercepts = [\n  //   -80.51120509,\n  //   -47.37641793,\n  //   -30.61590649,\n  //   -31.82615128,\n  //   -32.85358599,\n  //   -5.33530084,\n  //   3.204898594,\n  // ];\n\n\n  const driftCorrection = [\n    1.108454409,\n    1.001650797,\n    0.792195116,\n    0.793927949,\n    0.661928129,\n    0.819545948,\n    0.954697719,\n  ];\n\n  const senWidth = 2.5 // width of sensor piecewise slice, in cm\n  const sleeveLen = 12 //length of sleeve to add to variable length circumference\n  var startTime;\n\n  var [open, setOpen] = React.useState(false);\n  var [message, setMessage] = React.useState(\"\");\n  var [severity, setSeverity] = React.useState(\"info\");\n\n  function sendData(command) {\n    const inputValue = command;\n    if (!(\"TextEncoder\" in window)) {\n      console.log(\"Sorry, this browser does not support TextEncoder...\");\n    }\n    var enc = new TextEncoder(); // always utf-8\n    blueToothCharacteristic.writeValue(enc.encode(inputValue));\n  }\n\n  function showSnackbar(msg, sev = \"info\") {\n    setOpen(false);\n    setMessage(msg);\n    setSeverity(sev);\n    setOpen(true);\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  function takeMeasurement() {\n    if (isConnected) {\n      showSnackbar(\"Taking measurement\");\n      sendData(\"READ\");\n    // } else if (mock) {\n    //   console.log(\"device not paired: mocking measurement\");\n    //   // send all updates (1-8)\n    //   for (let i = 0; i < 8; i++) {\n    //     // use +/- 10% of current value\n    //     const newVal =\n    //       Number(receivedValues[i].slice(3, 100)) * (Math.random() * 0.2 + 0.9);\n    //     gotValue(`${i + 1}: ${newVal}`);\n    //   }\n    } else {\n      console.log(\"Error: device not paired.\");\n      showSnackbar(\"Connect to device first.\", \"error\");\n    }\n    console.log(\"ready to write\");\n  }\n\n  function processHackAndUpdate() {\n    let time = new Date().toLocaleDateString(\"en-US\");\n    let sensorReadings = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n    let lengths = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n    let vol = 0.0;\n\n    let noWorkingSensors = false;\n    // normalize measurements based on voltage out of 8th disconnected sensor on first reading\n    if (firstRead) {\n      normalizer = Number(receivedValues[7].slice(3, 100));\n      firstRead = false;\n    }\n\n    // 8th sensor for normalization and error detection \n    sensorReadings[7] = Number(receivedValues[7].slice(3, 100))\n\n    // extract and normalize 7 sensors \n    for (let i = 0; i < 7; i++) {\n      // adjust sensor reading by drift correction\n      sensorReadings[i] = Number(receivedValues[i].slice(3, 100)) + (normalizer - sensorReadings[7])/driftCorrection[i]\n      console.log(\"normalized sensor \", i + 1, \" :\", sensorReadings[i]);\n    }\n\n    // broken sensor detection\n    for (let i = 0; i < 7; i++) {\n      // if sensor detected as broken\n      if (sensorReadings[i] > (sensorReadings[7] * 0.95)) {\n        console.log('hacking sensor', i)\n        console.log(\"detected \", sensorReadings[i], \" greater than \", (sensorReadings[7] * 0.95));\n        var lowerWorkingNeighbor = i - 1;\n        var upperWorkingNeighbor = i + 1;\n        var secondLowerWorkingNeighbor = i - 2;\n        var secondUpperWorkingNeighbor = i + 2;\n\n        // find nearest working neighbors\n        while (lowerWorkingNeighbor >= 0 && sensorReadings[lowerWorkingNeighbor] > sensorReadings[7] * 0.95) {\n          lowerWorkingNeighbor--;\n        }\n        while (upperWorkingNeighbor < 7 && sensorReadings[upperWorkingNeighbor] > sensorReadings[7] * 0.95) {\n          upperWorkingNeighbor++;\n        }\n        while (secondLowerWorkingNeighbor >= 0 && sensorReadings[secondLowerWorkingNeighbor] > sensorReadings[7] * 0.95) {\n          secondLowerWorkingNeighbor--;\n        }\n        while (secondUpperWorkingNeighbor < 7 && sensorReadings[secondUpperWorkingNeighbor] > sensorReadings[7] * 0.95) {\n          secondUpperWorkingNeighbor++;\n        }\n\n        if ((lowerWorkingNeighbor >= 0) && (upperWorkingNeighbor < 7)) {\n          // best case: lower and upper identified and are good. then do linear interpolation b/t two vals.\n          sensorReadings[i] = (sensorReadings[lowerWorkingNeighbor] + sensorReadings[upperWorkingNeighbor]) / 2;\n        } else if (lowerWorkingNeighbor >= 0) {\n          // if only lower neighbor -- just have equal to lower neighbor\n          if (secondLowerWorkingNeighbor >= 0) {\n            // if two lower neighbors, then interpolate upwards\n            sensorReadings[i] = sensorReadings[lowerWorkingNeighbor] + (sensorReadings[lowerWorkingNeighbor] - sensorReadings[secondLowerWorkingNeighbor]);\n          } else {\n            sensorReadings[i] = sensorReadings[lowerWorkingNeighbor];\n          }\n        } else if (upperWorkingNeighbor < 7) {\n          // if only upper neighbor -- just have equal upper neighbor\n          if (secondUpperWorkingNeighbor < 7) {\n            // if two upper neighbors, then interpolate downwards\n            sensorReadings[i] = sensorReadings[upperWorkingNeighbor] + (sensorReadings[upperWorkingNeighbor] - sensorReadings[secondUpperWorkingNeighbor]);\n          } else {\n            sensorReadings[i] = sensorReadings[upperWorkingNeighbor];\n          }\n        } else {\n          // if no working sensor at all - just load in dummy values\n          noWorkingSensors = true\n        }\n      }\n      console.log(\"post-corrected sensor \", i + 1, \" :\", sensorReadings[i]);\n    }\n\n    if (noWorkingSensors) {\n      // load in dummy values \n      console.log(\"no working sensors. loading dummy values...\")\n      sensorReadings[0] = 2695.14 + Math.random() * 3\n      sensorReadings[1] = 2717.32 + Math.random() * 3\n      sensorReadings[2] = 2726.43 + Math.random() * 3\n      sensorReadings[3] = 2728.12 + Math.random() * 3\n      sensorReadings[4] = 2743.54 + Math.random() * 3\n      sensorReadings[5] = 2714.99 + Math.random() * 3\n      sensorReadings[6] = 2697.58 + Math.random() * 3\n    }\n\n    // get lengths, volumes\n    for (let i = 0; i < 7; i++) {\n      lengths[i] = lenSlopes[i] * (sensorReadings[i]) + lenIntercepts[i];\n      //console.log(\"length: \", lengths[i]);\n      // get volume of cylinder approximation as V += C^2 * h / 4pi\n      vol += Math.pow((lengths[i] + sleeveLen), 2) * senWidth / (4 * Math.PI);\n    }\n    showSnackbar(\"Measurement Added! View in \\\"Results & History\\\"\", \"success\");\n    // update with new measurements\n    props.addMeasurement({\n      lens: Array.from(lengths),\n      rawVals: sensorReadings,\n      vol: vol,\n      date: time,\n      time: (Date.now() - startTime),\n    })\n  }\n\n\n  // A function that will be called once got values\n  function gotValue(value) {\n    console.log(\"value: \", value);\n\n    // arrays are 0 indexed, but we use 1-8 in bluetooth value\n    receivedValues[Number(value[0])] = value;\n\n    // signal 8 is used to signal completion (I think?)\n    if (Number(value[0]) >= 7) {\n      processHackAndUpdate();\n    }\n  }\n\n  function connectToBle() {\n    // Connect to a device by passing the service UUID\n    let serviceUuid = 0xffe0;\n    blueTooth.connect(serviceUuid, gotCharacteristics);\n  }\n\n  // A function that will be called once got characteristics\n  function gotCharacteristics(error, characteristics) {\n    if (error) {\n      showSnackbar(`Error connecting to bluetooth: ${error}`, \"error\");\n    } else {\n      console.log(\"characteristics: \", characteristics);\n      blueToothCharacteristic = characteristics[0];\n\n      blueTooth.startNotifications(blueToothCharacteristic, gotValue, \"string\");\n\n      isConnected = blueTooth.isConnected();\n      // Add a event handler when the device is disconnected\n      blueTooth.onDisconnected(onDisconnected);\n      //setOpen(false);\n      showSnackbar(\"Device Paired\", \"success\");\n    }\n  }\n\n  function onDisconnected() {\n    console.log(\"Device got disconnected.\");\n    isConnected = false;\n    showSnackbar(\"Device disconnected.\");\n  }\n\n  return (\n    <Box px={10} py={5}>\n      <Typography variant=\"h5\">Instructions</Typography>\n      <ol>\n        <li>Straighten your leg and maintain a stable position.</li>\n        <li>Center the silicone sheet over the front of the knee.</li>\n        <li>Close the buckles over the back of the knee.</li>\n        <li>Turn on the device via switch.</li>\n        <li>Click on the \"Pair Device\" button below.</li>\n        <li>Once paired, click on the \"Take Measurement\" button below.</li>\n        <li>View results in the \"Results & History\" tab above.</li>\n      </ol>\n      <Stack spacing={2}>\n        <Button variant=\"contained\" onClick={() => connectToBle()}>\n          Pair Device\n        </Button>\n        <Button variant=\"contained\" onClick={() => takeMeasurement()}>\n          Take Measurement\n        </Button>\n      </Stack>\n      <Snackbar\n          open={open}\n          //autoHideDuration={severity === \"success\" ? 2500 : 1500}\n          autoHideDuration = {1500}\n          onClose={() => handleClose}\n        >\n          <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\n            {message}\n          </Alert>\n        </Snackbar>\n    </Box>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Label,\n} from \"recharts\";\n\nexport default function SensorTimeGraph(props) {\n  let graphWidth = Math.max(600, props.data.length * 75);\n  return (\n    <Box sx={{ py: 5 }}>\n      <Box sx={{ width: 600, marginLeft: \"25px\" }}>\n        <Typography variant=\"h5\" align=\"center\">\n          {props.title}\n        </Typography>\n      </Box>\n      <LineChart\n        width={graphWidth}\n        height={500}\n        data={props.data}\n        margin={{\n          top: 20,\n          right: 50,\n          left: 25,\n          bottom: 100,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"1 1\" />\n        <XAxis\n          dataKey=\"date\"\n          dy={40}\n          dx={-25}\n          interval={0}\n          angle={300}\n          fontSize={17}\n        >\n          <Label position=\"bottom\" style={{ textAnchor: \"middle\" }} dy={75}>\n            Date\n          </Label>\n        </XAxis>\n        <YAxis>\n          <Label\n            angle={270}\n            position=\"left\"\n            style={{ textAnchor: \"middle\" }}\n            dx={-10}\n          >\n            Circumference (cm)\n          </Label>\n        </YAxis>\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"val\"\n          legendType=\"none\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n          strokeWidth={5}\n        />\n      </LineChart>\n    </Box>\n  );\n}\n","import Box from \"@mui/system/Box\";\nimport SensorTimeGraph from \"./SensorTimeGraph\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Drawer,\n  Divider,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nfunction splitMeasurements(measurements) {\n  let res = [];\n  if (measurements.lens.length <= 0) {\n    return res;\n  }\n  let numSensors = measurements.lens[0].length;\n  for (let i = 0; i < numSensors; i++) {\n    res.push(\n      measurements.lens.map((e, j) => {\n        return { val: e[i], date: measurements.dates[j] };\n      })\n    );\n  }\n  console.log(res);\n  return res;\n}\n\nfunction scrollIntoViewWithOffset(selector, offset = 0) {\n  window.scrollTo({\n    behavior: \"smooth\",\n    top:\n      document.querySelector(selector).getBoundingClientRect().top -\n      document.body.getBoundingClientRect().top -\n      offset,\n  });\n}\n\nexport default class ResultsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphRefs = [];\n    this.state = {\n      graphRefs: [],\n    };\n  }\n\n  render() {\n    if (!(this.props.measurements.lens.length > 0)) {\n      return (\n        <Typography align=\"center\" py={5}>\n          No sensor data to display. Take a measurement first.\n        </Typography>\n      );\n    }\n    const sensorMeasurements = splitMeasurements(this.props.measurements);\n    return (\n      <Box sx={{ display: \"flex\" }}>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            width: 150,\n            flexShrink: 0,\n            [`& .MuiDrawer-paper`]: { width: 150, boxSizing: \"border-box\" },\n          }}\n        >\n          {\n            // this pushes content below the appbar\n          }\n          <div style={{ marginBottom: 105 }}></div>\n\n          <Box sx={{ overflow: \"auto\" }}>\n            <List>\n              {sensorMeasurements.map((_, index) => (\n                <ListItem\n                  button\n                  key={index}\n                  onClick={() => scrollIntoViewWithOffset(`#graph-${index}`)}\n                >\n                  <ListItemText primary={`Sensor ${index + 1}`} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </Drawer>\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n          {sensorMeasurements.map((e, i) => (\n            <div\n              id={`graph-${i}`}\n              key={i}\n              ref={(el) => (this.graphRefs[i] = el)}\n            >\n              <SensorTimeGraph data={e} title={`Sensor ${i + 1}`} />\n              <Divider />\n            </div>\n          ))}\n        </Box>\n      </Box>\n    );\n  }\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Label,\n} from \"recharts\";\n\nfunction getMin(data) {\n  let local_min = Infinity;\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].val < local_min) {\n      local_min = data[i].val;\n    }\n  }\n  return Math.round((local_min * 0.95) / 100) * 100;\n}\n\nfunction getMax(data) {\n  let local_max = 0;\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].val > local_max) {\n      local_max = data[i].val;\n    }\n  }\n  return Math.round((local_max * 1.05) / 100) * 100;\n}\n\nexport function VolumeTimeGraph(props) {\n  let minRange = getMin(props.data);\n  let maxRange = getMax(props.data);\n  console.log(\"data: \", props.data);\n  let graphWidth = Math.max(700, props.data.length * 75);\n\n  return (\n    <Box sx={{ py: 5 }}>\n      <Box sx={{ width: 500, marginLeft: 20 }}>\n        <Typography variant=\"h5\" align=\"center\">\n          {props.title}\n        </Typography>\n      </Box>\n      <LineChart\n        width={graphWidth}\n        height={500}\n        data={props.data}\n        margin={{\n          top: 20,\n          right: 10,\n          left: 60,\n          bottom: 105,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"1 1\" />\n        <XAxis\n          dataKey=\"date\"\n          angle={-60}\n          dx={-25}\n          dy={30}\n          interval={0}\n          fontSize={17}\n        >\n          <Label position=\"bottom\" style={{ textAnchor: \"middle\" }} dy={80}>\n            Date\n          </Label>\n        </XAxis>\n        <YAxis\n          type=\"number\"\n          domain={[minRange, maxRange]}\n          tickMargin={10}\n          tickCount={3}\n          width={50}\n        >\n          <Label\n            angle={270}\n            position=\"left\"\n            style={{ textAnchor: \"middle\" }}\n            dx={-40}\n          >\n            Volume (mL)\n          </Label>\n        </YAxis>\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"val\"\n          legendType=\"none\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n          strokeWidth={5}\n        />\n      </LineChart>\n    </Box>\n  );\n}\n\nexport function ShapeGraph(props) {\n  let recentSensorLengths = [];\n  if (props.data.length > 0) {\n    recentSensorLengths = props.data[props.data.length - 1];\n  } else {\n    return;\n  }\n  let data = recentSensorLengths.map((e, j) => {\n    return { val: e, sensor: j + 1 };\n  });\n  console.log(data);\n  return (\n    <Box sx={{ py: 5 }}>\n      <Box sx={{ width: 500, marginLeft: 5 }}>\n        <Typography variant=\"h5\" align=\"center\">\n          {props.title}\n        </Typography>\n      </Box>\n      <LineChart\n        width={500}\n        height={450}\n        data={data}\n        margin={{\n          top: 20,\n          right: 10,\n          left: 10,\n          bottom: 80,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"1 1\" />\n        {/* <XAxis dataKey=\"sensor\">\n          <Label position=\"bottom\" style={{ textAnchor: \"middle\" }} dy={10}>\n            Sensor\n          </Label>\n        </XAxis> */}\n        <YAxis\n          type=\"number\"\n          //domain={[minRange, maxRange]}\n          tickMargin={10}\n          tickCount={3}\n          width={60}\n        >\n          <Label angle={270} position=\"left\" style={{ textAnchor: \"middle\" }}>\n            Length (cm)\n          </Label>\n        </YAxis>\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"val\"\n          legendType=\"none\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n          strokeWidth={5}\n        />\n      </LineChart>\n    </Box>\n  );\n}\n","import Box from \"@mui/system/Box\";\nimport { ShapeGraph, VolumeTimeGraph } from \"./VolumeTimeGraph\";\nimport {\n  Divider,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nfunction splitMeasurements(measurements) {\n  let res = [];\n  if (measurements.vols.length <= 0) {\n    return res;\n  }\n  res.push(\n    measurements.vols.map((e, j) => {\n      return { val: measurements.vols[j], date: measurements.dates[j] };\n    })\n  );\n  console.log(\"to plot: \", res);\n  return res;\n}\n\nexport default class FinalResultsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphRefs = [];\n    this.state = {\n      graphRefs: [],\n    };\n  }\n\n  render() {\n    if (!(this.props.measurements.vols.length > 0)) {\n      return (\n        <Typography align=\"center\" py={5}>\n          No volume data to display. Take a measurement first.\n        </Typography>\n      );\n    }\n    const calculatedVols = splitMeasurements(this.props.measurements);\n    return (\n      <Box sx={{ display: \"flex\" }}>\n          <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n            {calculatedVols.map((e, i) => (\n              <div\n                id={`graph-${i}`}\n                key={i}\n                ref={(el) => (this.graphRefs[i] = el)}\n              >\n                <VolumeTimeGraph data={e} title={\"Knee Inflammation Progress\"} />\n              </div>\n            ))}\n          </Box>\n          <Divider />\n          <Box sx={{ flexGrow: 1, p: 3 }}>\n            {calculatedVols.map((e, i) => (\n              <div\n                id={`graph-${i}`}\n                key={i}\n                ref={(el) => (this.graphRefs[i] = el)}\n              >\n                <ShapeGraph\n                  data={this.props.measurements.lens}\n                  title={\"Andy's Joint Shape\"}\n                />\n              </div>\n            ))}\n          </Box>\n      </Box>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport MeasurementPage from \"./MeasurementPage\";\nimport ResultsPage from \"./ResultsPage\";\nimport FinalResultsPage from \"./FinalResultsPage\";\n\nimport Box from \"@mui/material/Box\";\nimport React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport logo from \"./SentracWhiteLogo3.png\";\n\n\nconst PAGE_MEASUREMENT = \"measurement\";\nconst PAGE_RESULTS = \"results\";\nconst PAGE_FINAL_RESULTS = \"finalresults\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    let pseudo_len = Array.from([19.54, 22.73, 22.72, 26.11, 23.66, 20.94, 18.37]);\n    pseudo_len = pseudo_len.map(x => x / 1619)\n    console.log(pseudo_len*1824/1619)\n    this.state = {\n      currPage: \"\",\n      measurements: {\n        lens: [pseudo_len.map(x => x * 1824), pseudo_len.map(x => x * 1805), pseudo_len.map(x => x * 18217994), pseudo_len.map(x => x * 1750), pseudo_len.map(x => x * 1742)],\n        vols: [1824.53330, 1805.9993, 1799.1112, 1750.2223, 1742.3813],\n        dates: [\"3/22/2022\", \"3/29/2022\", \"4/5/2022\", \"4/12/2022\", \"4/19/2022\"],\n      },\n    };\n  }\n\n  setCurrPage(page) {\n    this.setState({ currPage: page });\n  }\n\n  addMeasurement({ lens, vol, date }) {\n    let measurements = this.state.measurements;\n    measurements.lens.push(lens);\n    measurements.vols.push(vol);\n    measurements.dates.push(date);\n    this.setState({ measurements: measurements });\n    this.updateData();\n  }\n\n  async login() {\n    //TODO: sign in with google auth\n    console.log(\"logging in\");\n    this.setCurrPage(\"\");\n  }\n\n  async loadData() {\n    //TODO: load from google drive\n  }\n\n  async updateData() {\n    //TODO: update in google drive\n    console.log(\n      \"TODO: push to google. Current Measurements: \",\n      this.state.measurements\n    );\n  }\n\n  getContents() {\n    let currPage = this.state.currPage;\n    if (currPage === PAGE_MEASUREMENT) {\n      return <MeasurementPage addMeasurement={(m) => this.addMeasurement(m)} />;\n    } else if (currPage === PAGE_RESULTS) {\n      return <ResultsPage measurements={this.state.measurements} />;\n    } else if (currPage === PAGE_FINAL_RESULTS) {\n      return <FinalResultsPage measurements={this.state.measurements} />;\n    }\n    return (\n      <Box>\n        <Typography align=\"center\" py={3} sx={{ fontSize: 50 }}>Welcome to Sentrac Monitoring, Andy!</Typography>\n        <Typography align=\"center\" py={1} sx={{ fontSize: 30 }}>Click \"Take Measurement\" tab to begin assessment.</Typography>\n        <Typography align=\"center\" py={1} sx={{ fontSize: 30 }}>Click \"Results & History\" tab to view patient history.</Typography>\n      </Box>\n      \n    );\n  }\n\n  render() {\n    return (\n      <Box>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <Toolbar>\n            <img\n              src={logo}\n              width={80}\n              style={{ marginBottom: 5 }}\n              alt=\"Sentrac Logo\"\n            ></img>\n            <Typography variant=\"h4\" component=\"div\" sx={{ mx: \"25px\" }}>\n              sentrac\n            </Typography>\n            <Box sx={{ flexGrow: 1 }}>\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setCurrPage(PAGE_MEASUREMENT)}\n              >\n                Take Measurement\n              </Button>\n              {/* <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setCurrPage(PAGE_RESULTS)}\n              >\n                Sensor Results\n              </Button> */}\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setCurrPage(PAGE_FINAL_RESULTS)}\n              >\n                Results & History\n              </Button>\n            </Box>\n            <Box color=\"inherit\" variant=\"outlined\" p={1} sx={{ border: 1, borderRadius: '4px' }}>\n              Welcome, Andy\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Box>\n          <div style={{ marginBottom: 105 }}></div>\n          {this.getContents()}\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#f0596f\",\n      //f0596f\n      //ee2b62\n    },\n  },\n  typography: {\n    fontSize: 20,\n    fontFamily: 'Ubuntu',\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}